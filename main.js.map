{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* .example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n   */\"","module.exports = \"<app-form></app-form>\\n\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'form';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent\n  \n    \n\n    \n  ],\n  imports: [\n    BrowserModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    \n    \n\n   \n    \n   \n   \n    \n   \n    \n    ],\n  providers: [\n   \n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .BrowserAnimationsModule {\\r\\n}\\r\\n  .example-container1 .mat-radio-button {\\r\\n  margin: 0 5px;\\r\\n  }\\r\\n  .bto{\\r\\n    padding-top: 16px;\\r\\n   \\r\\n  }\\r\\n  .bto1{\\r\\n    padding-top: 25px;\\r\\n  }\\r\\n  .txtclr{\\r\\n    color: #969393;\\r\\n  }\\r\\n  input.example-right-align::-webkit-outer-spin-button,\\r\\ninput.example-right-align::-webkit-inner-spin-button {\\r\\n  display: none;\\r\\n}\\r\\n  input.example-right-align {\\r\\n  -moz-appearance: textfield;\\r\\n}\"","module.exports = \"\\n   \\n    <h5 class=\\\"text-center\\\">CYC</h5>\\n    <h6 class=\\\"text-center\\\">2018-2019</h6>\\n    <h6 class=\\\"text-center\\\">Basketball Registration Form</h6>\\n    \\n    <div class=\\\" border border-secondary container\\\">\\n        <div class=\\\"container\\\">\\n                <form  (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4 col-md-4 col-4 col-lg-4 col-xl-4 \\\" >\\n                \\n                  \\n                        <mat-form-field class=\\\"example-full-width\\\" hintLabel=\\\"Max 20 characters\\\">\\n                          <input matInput #input maxlength=\\\"20\\\" placeholder=\\\"Child's Name\\\" [formControl]=\\\"name\\\" required  >\\n                           <mat-error *ngIf=\\\"name.invalid\\\">{{childmessage()}}</mat-error>\\n                        \\n                          <mat-hint >{{input.value?.length || 0}}/20</mat-hint>\\n                        </mat-form-field>\\n            </div>\\n                \\n                  \\n            \\n            <div class=\\\"col-sm-4 col-md-4 col-4 col-lg-4 col-xl-4 bto txtclr\\\" >\\n                    <mat-radio-group  class=\\\"example-container1 \\\"  [formControl]=\\\"gender\\\" required >\\n                            <span>Gender:</span><mat-radio-button value=\\\"1\\\">Male</mat-radio-button>\\n                            <mat-radio-button value=\\\"2\\\">Female</mat-radio-button>\\n                            <mat-radio-button value=\\\"3\\\">Other</mat-radio-button>\\n                            <mat-error *ngIf=\\\"gender.invalid\\\">{{gendererror()}}</mat-error>\\n                     </mat-radio-group>\\n                           \\n               </div>\\n            <div class=\\\"col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2\\\" >\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Grade\\\"[formControl]=\\\"grade\\\" required>\\n                    <mat-error *ngIf=\\\"grade.invalid\\\">{{setErrorMessage()}}</mat-error>\\n                    <mat-hint>required.</mat-hint>\\n                  </mat-form-field> \\n                                \\n              </div>\\n              <div class=\\\"col-sm-2 col-md-2\\\" >\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Age\\\" type=\\\"number\\\" [formControl]=\\\"age\\\" required>\\n                            <mat-error *ngIf=\\\"age.invalid\\\">{{ageerrormessage()}}</mat-error>                              \\n                          </mat-form-field>             \\n                </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\\\">\\n\\n             <mat-form-field class=\\\"example-full-width\\\">\\n                <textarea matInput placeholder=\\\"Address\\\" [formControl]=\\\"address1\\\" required></textarea>\\n                <mat-error *ngIf=\\\"address1.invalid\\\">{{addresserror1()}}</mat-error>          \\n              </mat-form-field>\\n              </div>\\n              </div>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-9 col-sm-9 col-md-9 col-lg-9 col-xl-9\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"City\\\" [formControl]=\\\"city1\\\" required>\\n                      <mat-error *ngIf=\\\"city1.invalid\\\">{{cityerror1()}}</mat-error>\\n                    </mat-form-field> \\n        </div>\\n        <div class=\\\"col-3 col-sm-3 col-md-3 col-lg-3 col-xl-3\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput #postalCode maxlength=\\\"6\\\" placeholder=\\\"Zip\\\" [formControl]=\\\"zip1\\\" required >\\n                        <mat-error *ngIf=\\\"zip1.invalid\\\">{{ziperror()}}</mat-error>\\n                        <mat-hint >{{postalCode.value.length}} / 6</mat-hint>\\n                      </mat-form-field>\\n        </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\" hintLabel=\\\"Max 10 number's\\\">\\n                            <span matPrefix>+91 &nbsp;</span>\\n                            <input type=\\\"tel\\\" matInput placeholder=\\\"Phone\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\"[formControl]=\\\"phone1\\\" required >\\n                            <mat-error *ngIf=\\\"phone1.invalid\\\">{{phoneerror1()}}</mat-error>\\n                           \\n                     </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\"  hintLabel=\\\"Max 10 number's\\\" >\\n                                <span matPrefix>+91 &nbsp;</span>\\n                                <input type=\\\"tel\\\" matInput placeholder=\\\"Cell\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" [formControl]=\\\"phone2\\\" required >\\n                                <mat-error *ngIf=\\\"phone2.invalid\\\">{{phoneerror2()}}</mat-error>\\n                         </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\"  >\\n                                <input matInput placeholder=\\\"School\\\" [formControl]=\\\"school\\\" required>\\n                                <mat-error *ngIf=\\\"school.invalid\\\">{{schoolerror()}}</mat-error>\\n                              </mat-form-field>\\n                              </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\" hintLabel=\\\"Max 15 characters\\\">\\n                                    <input matInput #input maxlength=\\\"15\\\" placeholder=\\\"Parent/Guardian's Name\\\" [formControl]=\\\"parent\\\" required >\\n                                    <mat-error *ngIf=\\\"parent.invalid\\\">{{ parentnameerror()}}</mat-error>\\n                                    \\n                                    <mat-hint>{{input.value?.length || 0}}/15</mat-hint>\\n                                  </mat-form-field>\\n                       \\n                    </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\\\">\\n                           \\n                             \\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                      <input matInput placeholder=\\\"Email-Address\\\" [formControl]=\\\"email\\\" required>\\n                                      <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                                    </mat-form-field>\\n                                  \\n                            \\n                          </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-9 col-sm-9 col-md-9 col-lg-9 col-xl-9\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                              <input matInput placeholder=\\\"EmergencyContact\\\" [formControl]=\\\"emergency\\\" required >\\n                              <mat-error *ngIf=\\\"emergency.invalid\\\">{{ emergencyerror()}}</mat-error>\\n                            </mat-form-field> \\n                      </div>\\n                      <div class=\\\"col-3 col-sm-3 col-md-3 col-lg-3 col-xl-3\\\">\\n                                                      <mat-form-field class=\\\"example-full-width\\\" hintLabel=\\\"Max 10 number's\\\">\\n                                    <span matPrefix>+91 &nbsp;</span>\\n                                    <input type=\\\"tel\\\" matInput minlength=\\\"10\\\" placeholder=\\\"Phone\\\" maxlength=\\\"10\\\" [formControl]=\\\"phone3\\\" required >\\n                                    <mat-error *ngIf=\\\"phone3.invalid\\\">{{phoneerror3()}}</mat-error>\\n                                    \\n                             </mat-form-field>\\n                      </div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                          <div class=\\\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\n                              <mat-form-field class=\\\"example-full-width\\\">\\n                                  <input matInput placeholder=\\\"Family Doctor\\\" [formControl]=\\\"family\\\" required >\\n                                  <mat-error *ngIf=\\\"family.invalid\\\">{{ familyerror()}}</mat-error>\\n                                </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"Hospital in case of emergency\\\" [formControl]=\\\"hospital\\\" required >\\n                                        <mat-error *ngIf=\\\"hospital.invalid\\\">{{hospitalerror()}}</mat-error>\\n                                      </mat-form-field>\\n                                      </div>\\n                                </div>\\n                                \\n                                \\n                                <div class=\\\"row\\\">   \\n                                <div class=\\\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-6 bto txtclr\\\">\\n                                  \\n                                    <mat-radio-group  class=\\\"example-container1\\\" [formControl]=\\\"young\\\" required><span>Shirt size for youth:</span>\\n                                    <mat-radio-button value=\\\"1\\\">S</mat-radio-button>\\n                                    <mat-radio-button value=\\\"2\\\">M</mat-radio-button>\\n                                    <mat-radio-button value=\\\"3\\\">L</mat-radio-button>\\n                                    <mat-error *ngIf=\\\"young.invalid\\\">{{youngerror()}}</mat-error>\\n                                    </mat-radio-group>\\n                                   \\n                                    </div>\\n                                    <div class=\\\"col-6 col-sm-6 col-md-6 col-lg-6 col-xl-6  bto txtclr\\\">\\n\\n                                        \\n                                    <mat-radio-group class=\\\"example-container1\\\" [formControl]=\\\"adult\\\" required><span>Shirt size for Adult:</span>\\n                                    <mat-radio-button value=\\\"1\\\">S</mat-radio-button>\\n                                    <mat-radio-button value=\\\"2\\\">M</mat-radio-button>\\n                                    <mat-radio-button value=\\\"3\\\">L</mat-radio-button>\\n                                    <mat-radio-button value=\\\"4\\\">XL</mat-radio-button>\\n                                    <mat-error *ngIf=\\\"adult.invalid\\\">{{adulterror()}}</mat-error>\\n                                    </mat-radio-group>\\n                                    </div>\\n                                 </div>\\n       \\n\\n                                 <div class=\\\"row\\\">\\n                                    <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\\\">\\n\\n                                 <mat-form-field class=\\\"example-full-width\\\">\\n                                    <textarea matInput placeholder=\\\"Special Request\\\"></textarea>\\n                                  </mat-form-field>\\n                                  </div>\\n                                  </div>\\n                                  <div class=\\\"row\\\">\\n                                      <div class=\\\"col-8 col-sm-8 col-md-8 col-lg-8 col-xl-8\\\">\\n                                         \\n                                      \\n                                            <mat-form-field class=\\\"example-full-width\\\" hintLabel=\\\"Max 20 characters\\\">\\n                                                    <label class=\\\"txtclr\\\">Interested in coaching? Name:</label><input matInput [formControl]=\\\"coach\\\" required >\\n                                                    <mat-error *ngIf=\\\"coach.invalid\\\">{{coacherror()}}</mat-error>\\n                                                    <mat-hint >{{input.value?.length || 0}}/20</mat-hint>\\n                                            \\n                                                </mat-form-field>\\n\\n                                      </div>\\n                                      <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4 bto1\\\">\\n                                            <mat-form-field class=\\\"example-full-width\\\"  hintLabel=\\\"Max 10 number's\\\">                                                    \\n                                                    <span matPrefix>+91 &nbsp;</span>\\n                                                    <input type=\\\"tel\\\" matInput minlength=10 maxlength=10 placeholder=\\\"Phone\\\"  [formControl]=\\\"phone4\\\" required>\\n                                                    <mat-error *ngIf=\\\"phone4.invalid\\\">{{phoneerror4()}}</mat-error>\\n                                                   \\n                                             </mat-form-field>\\n                                      </div>\\n                                      </div>\\n                                      <div class=\\\"row\\\">\\n                                      <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\">\\n                                            <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <textarea matInput placeholder=\\\"Address\\\"  [formControl]=\\\"address2\\\" required></textarea>\\n                                                    <mat-error *ngIf=\\\"address2.invalid\\\">{{addresserror2()}}</mat-error>\\n                                                  </mat-form-field>\\n\\n                                      </div>\\n                                      <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4  bto\\\">\\n                                            <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <mat-select placeholder=\\\"City\\\" [formControl]=\\\"city2\\\" required>\\n                                                    <mat-option *ngFor=\\\"let c of cities\\\" [value]=\\\"c.value\\\">\\n                                                    {{c.viewValue}}\\n                                                        </mat-option>\\n                                                    </mat-select>\\n                                                    <mat-error *ngIf=\\\"city2.invalid\\\">{{cityerror2()}}</mat-error>\\n                                                    </mat-form-field>\\n                                                   </div>\\n\\n                                      \\n                                      <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4 bto\\\">\\n           \\n                                         <mat-form-field class=\\\"example-full-width\\\">\\n                                         <mat-select placeholder=\\\"State\\\"  [formControl]=\\\"state\\\" required >\\n                                         <mat-option *ngFor=\\\"let s of states\\\" [value]=\\\"s.value\\\">\\n                                         {{s.viewValue}}\\n                                             </mat-option>\\n                                         </mat-select>\\n                                         <mat-error *ngIf=\\\"state.invalid\\\">{{stateerror()}}</mat-error>\\n                                         </mat-form-field>\\n                                        </div>\\n                                      </div>\\n                                      <h5 class=\\\"text-center txtclr\\\"><ins>Waiver</ins></h5>\\n                                      <div class=\\\"row\\\">\\n                                          <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 txtclr \\\">\\n                                               <label>I  <mat-form-field class=\\\"\\\">\\n                                                        <input matInput placeholder=\\\"\\\"[formControl]=\\\"waiver\\\" required >\\n                                                        <mat-error *ngIf=\\\"waiver.invalid\\\">{{waivererror()}}</mat-error>\\n                                                      </mat-form-field>  is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\\n                                                           The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, \\n                                                           content here', making it look like readable English.It is a long established fact that a reader will be distracted by the readable\\n                                                            content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of \\n                                                            letters, as opposed to using 'Content here, content here', making it look like readable English.</label>\\n                                            \\n                                            </div>\\n                                            </div>\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4 txtclr\\\">\\n                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                            <input matInput placeholder=\\\"Amount\\\" type=\\\"number\\\" class=\\\"example-right-align\\\" [formControl]=\\\"amount\\\" required>\\n                                                            <span matPrefix>RS&nbsp;</span>\\n                                                            <span matSuffix>.00</span>\\n                                                            <mat-error *ngIf=\\\"amount.invalid\\\">{{amounterror()}}</mat-error>\\n                                                          </mat-form-field>\\n                                                </div>\\n                                                <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\">\\n                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date\\\" [formControl]=\\\"amount\\\" required>\\n                                                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                            <mat-datepicker #picker></mat-datepicker>\\n                                                            <mat-error *ngIf=\\\"date.invalid\\\">{{dateerror()}}</mat-error>\\n                                                          </mat-form-field>\\n                                              \\n                                                </div>\\n                                                <div class=\\\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\">\\n                                                  \\n                                       <mat-form-field class=\\\"example-full-width\\\">\\n                                          <input matInput placeholder=\\\"Staff\\\" [formControl]=\\\"staff\\\" required>\\n                                          <mat-error *ngIf=\\\"staff.invalid\\\">{{stafferror()}}</mat-error>\\n                                        </mat-form-field>\\n          \\n                                                </div>\\n                                             \\n                                            </div>\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-12 col-sm-12 col-md-12  col-lg-12 col-xl-12\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                                <button  class=\\\"btn btn-primary\\\">Register</button>\\n                                                            </div>\\n                                                </div>\\n                                                \\n                                            </div>\\n                                            \\n                                         </form>\\n                                      </div> \\n                                  </div>\\n\\n\\n\\n\\n\\n                                \"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators,FormBuilder, FormGroup} from '@angular/forms';\n\n\n\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\n\nexport class FormComponent implements OnInit {\n  registerForm: FormGroup;\n    submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n  \n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\nelse{\n    alert('SUCCESS!! :-)');\n    return;\n}\n}\n\n\n  states =[\n    {value: '0', viewValue: 'Tamil Nadu'},\n    {value: '1', viewValue: 'Telangana'},\n    {value: '2', viewValue: 'Uttar Pradesh'},\n    {value: '3', viewValue:'Goa'}\n  ];\n\n  cities =[\n    {value:'1', viewValue:'Mumbai'},\n    {value:'2', viewValue:'Delhi'},\n    {value:'3', viewValue:'Chennai'},\n    {value:'4', viewValue:'Jaipur'},\n    {value:'5', viewValue:'Kolkata'},\n    {value:'6', viewValue:'Bangalore'}\n  ];\n\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(2020, 0, 1);\n\n\n/*validator*/\n  email = new FormControl('', [Validators.required, Validators.email]);\n  name =new FormControl('',[Validators.required,Validators.pattern('[A-Za-z]+')]);\n  grade = new FormControl('',[Validators.required]);\n  age = new FormControl('',[Validators.required]);\n  address1 = new FormControl('',[Validators.required]);\n  city1 = new FormControl('',[Validators.required]);\n  zip1 =new FormControl('',[Validators.required]);\n  school = new FormControl('',[Validators.required]);\n  parent = new FormControl('',[Validators.required,Validators.pattern('[A-Za-z]+')]);\n  emergency = new FormControl('',[Validators.required]);\n  family = new FormControl('',[Validators.required,Validators.pattern('[A-Za-z]+')]);\n  hospital = new FormControl('',[Validators.required]);\n  coach = new FormControl('',[Validators.required,Validators.pattern('[A-Za-z]+')]);\n  address2 = new FormControl('',[Validators.required]);\n  city2 = new FormControl('',[Validators.required]);\n  state = new FormControl('',[Validators.required]);\n  waiver = new FormControl('',[Validators.required]);\n  amount = new FormControl('',[Validators.required]);\n  date = new FormControl('',[Validators.required]);\n  staff = new FormControl('',[Validators.required,Validators.pattern('[A-Za-z]+')]);\n phone1 = new FormControl('',[Validators.required,Validators.pattern('[0-9]+')]);\n phone2 = new FormControl('',[Validators.required,Validators.pattern('[0-9]+')]);\n phone3 = new FormControl('',[Validators.required,Validators.pattern('[0-9]+')]);\n phone4 = new FormControl('',[Validators.required,  Validators.pattern('[0-9]+')]);\n gender =  new FormControl('',[Validators.required]);\n young = new FormControl('',[Validators.required]);\n adult = new FormControl('',[Validators.required]);\n\n \n\n\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter the value' :\n        this.email.hasError('email') ? 'Not a valid email' :\n            '';\n  }\n setErrorMessage() {\n   return this.grade.hasError('required') ? 'you must enter the grade' :\n   '';\n   }\n\n   childmessage() {\n    return this.name.hasError('required') ? 'you must enter the name' :\n    this.name.hasError('pattern') ? 'only enter the alphabet' :\n    '';\n   }\n\n   ageerrormessage() {\n     return this.age.hasError('required') ? 'you must enter the age':\n     '';\n   }\n   addresserror1(){\n     return this.address1.hasError('required') ? 'you must enter the address':\n     '';\n   }\n   cityerror1() {\n     return this.city1.hasError('required') ? 'required this field':\n     '';\n   }\n   ziperror() {\n     return this.zip1.hasError('required') ? 'enter the value':\n     '';\n   }\n   schoolerror() {\n     return this.school.hasError('required') ? 'enter the school name':\n     '';\n   }\n   parentnameerror() {\n     return this.parent.hasError('required') ? 'must enter your parent name':\n     this.parent.hasError('pattern') ? 'only enter the alphabet' :\n    '';\n\n   }\n   emergencyerror() {\n    return this.emergency.hasError('required') ? 'required this field':\n    '';\n   }\n   familyerror(){\n    return this.family.hasError('required') ? 'enter your doctor name':\n    this.family.hasError('pattern') ? 'only enter the alphabet' :\n    '';\n   }\n  hospitalerror(){\n    return this.hospital.hasError('required') ? 'provide this details':\n    '';\n  }\n  coacherror(){\n    return this.coach.hasError('required') ? 'must enter the name':\n    this.coach.hasError('pattern') ? 'only enter the alphabet' :\n    '';\n\n  }\n  addresserror2(){\n    return this.address2.hasError('required') ? 'you must enter the address':\n    '';\n  }\n  cityerror2() {\n    return this.city2.hasError('required') ? 'required this field':\n    '';\n  }\n  stateerror(){\n    return this.state.hasError('required') ? 'required this field':\n    '';\n  }\nwaivererror(){\n  return this.waiver.hasError('required') ? 'enter this details':\n  '';\n}\namounterror(){\n  return this.amount.hasError('required') ? 'must enter the amount you pay':\n  '';\n}\ndateerror(){\n  return this.date.hasError('required') ? 'fill this field':\n  '';\n\n}\nstafferror(){\n  return this.staff.hasError('required') ? 'fill this field':\n  this.staff.hasError('pattern') ? 'only enter the alphabet' :\n  '';\n}\nphoneerror1(){\n  return this.phone1.hasError('required') ? 'You must enter the valid mobile number' :\n  this.phone1.hasError('pattern') ? 'only enter the number' :\n                 '';\n}\n\nphoneerror2(){\n  return this.phone2.hasError('required') ? 'You must enter the valid mobile number' :\n  this.phone2.hasError('pattern') ? 'only enter the number' :\n                 '';\n}\nphoneerror3(){\n  return this.phone3.hasError('required') ? 'You must enter the valid mobile number' :\n  this.phone3.hasError('pattern') ? 'only enter the number' :\n                 '';\n}\nphoneerror4(){\n  return this.phone4.hasError('required') ? 'You must enter the valid mobile number' :\n  this.phone4.hasError('pattern') ? 'please only enter the number' :\n \n                 '';\n}\ngendererror(){\n  return this.gender.hasError('required') ? 'fill this field' :\n  '';\n}\nyoungerror(){\n  return this.young.hasError('required') ? 'fill this field' :\n  '';\n}\nadulterror(){\n  return this.adult.hasError('required') ? 'fill this field' :\n  '';\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}